/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aksoyali;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Formatter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ali
 */
public class ProjeAnaGirisGUI extends javax.swing.JFrame {

    /**
     * Creates new form ProjeAnaGirisGUI
     */
        Connection baglanti = null;
    ResultSet resultSet = null;
     PreparedStatement preparedStatement = null;
    // CallableStatement callableStatement=null;
     
    public ProjeAnaGirisGUI() {
        initComponents();
          this.setLocationRelativeTo(getRootPane());//Frame ekranın ortasında açılır
                    lblGidenProjeAdi.setVisible(false);
          lblGidenProjeID.setVisible(false);
          lblGidenProjeIcerikID.setVisible(false);
          
          jScrollPane3.setVisible(false);
          jScrollPane4.setVisible(false);
                    jScrollPane5.setVisible(false);
          jScrollPane6.setVisible(false);
          aramaIcinProjeID.setVisible(false);
          
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProjeGiris = new javax.swing.JPanel();
        lblprojeAdi = new javax.swing.JLabel();
        txtprojeAdi = new javax.swing.JTextField();
        lblmusteriAdi = new javax.swing.JLabel();
        txtmusteriAdi = new javax.swing.JTextField();
        lblprojeHazirlamaTarihi = new javax.swing.JLabel();
        calendarprojeHazirlamaTarihi = new com.toedter.calendar.JDateChooser();
        lblprojeTeklifKodu = new javax.swing.JLabel();
        txtprojeTeklifKodu = new javax.swing.JTextField();
        lblGidenProjeAdi = new javax.swing.JLabel();
        lblGidenProjeID = new javax.swing.JLabel();
        lblGidenProjeIcerikID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        pnlProjeArama = new javax.swing.JPanel();
        lblAramaMesajProjeIcerik = new javax.swing.JLabel();
        txtAramaMalzemeGrubu = new javax.swing.JTextField();
        lblAramaMalzemeGrubu = new javax.swing.JLabel();
        lblAramaMalzemeAdi = new javax.swing.JLabel();
        txtAramaMalzemeAdi = new javax.swing.JTextField();
        aramaIcinProjeID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProjeGiris = new javax.swing.JTable();
        pnlButonlar = new javax.swing.JPanel();
        btnMalzemeGirisSil = new javax.swing.JButton();
        btnMalzemeGirisKaydet = new javax.swing.JButton();
        btnMalzemeGirisDuzenle = new javax.swing.JButton();
        btnProjeDetayYazdir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnMalzemeExport = new javax.swing.JButton();
        btnProjeDetayExcelAktar = new javax.swing.JButton();
        btnAcProjeDetayImportGUI = new javax.swing.JButton();
        btnProjeDetayRefresh = new javax.swing.JButton();
        btnProjeGirisFormuTemizle = new javax.swing.JButton();
        btnProjeGirisKaydet = new javax.swing.JButton();
        btnProjeGirisDuzenle = new javax.swing.JButton();
        btnProjeGirisSil = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableProjeninMalzemeleri = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblAramaprojeTeklifKodu = new javax.swing.JLabel();
        txtAramaprojeTeklifKodu = new javax.swing.JTextField();
        txtAramamusteriAdi = new javax.swing.JTextField();
        lblAramamusteriAdi = new javax.swing.JLabel();
        txtAramaprojeAdi = new javax.swing.JTextField();
        lblAramaprojeAdi = new javax.swing.JLabel();
        lblAramaMesajProje = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtToplamBirimFiyat = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtToplamMaliyetiGor = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtToplamBirimTeklifiGor = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtGenelToplamTeklifiGor = new javax.swing.JTextArea();
        btnProjeGirisYazdir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuDosya = new javax.swing.JMenu();
        menuItemExportExcel = new javax.swing.JMenuItem();
        menuItemExportCsv = new javax.swing.JMenuItem();
        menuItemImportCsv = new javax.swing.JMenuItem();
        menuItemProjeAdYazdir = new javax.swing.JMenuItem();
        menuItemProjeDetayYazdir = new javax.swing.JMenuItem();
        menuItemCikis = new javax.swing.JMenuItem();
        menuDuzen = new javax.swing.JMenu();
        menuToplamlar = new javax.swing.JMenu();
        menuItemToplamBirimFiyat = new javax.swing.JMenuItem();
        menuItemToplamMaliyet = new javax.swing.JMenuItem();
        menuItemToplamBirimTeklif = new javax.swing.JMenuItem();
        menuItemGenelToplamTeklif = new javax.swing.JMenuItem();
        menuItemMalzemeKayitSayisi = new javax.swing.JMenuItem();
        menuItemProjeSayisi = new javax.swing.JMenuItem();
        menuYardim = new javax.swing.JMenu();
        menuItemHakkinda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PROJE GİRİŞ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlProjeGiris.setBackground(new java.awt.Color(204, 255, 204));
        pnlProjeGiris.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblprojeAdi.setText("Proje Adı");

        lblmusteriAdi.setText("Müşteri Adı");

        lblprojeHazirlamaTarihi.setText("Proje Hazırlama Tarihi");

        calendarprojeHazirlamaTarihi.setMinSelectableDate(new java.util.Date(-62135773092000L));

        lblprojeTeklifKodu.setText("Proje Teklif Kodu");

        txtprojeTeklifKodu.setEditable(false);
        txtprojeTeklifKodu.setBackground(new java.awt.Color(0, 204, 153));

        lblGidenProjeAdi.setText("AD");

        lblGidenProjeID.setText("jLabel1");

        lblGidenProjeIcerikID.setText("İCERİK ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("*");
        jLabel3.setToolTipText("ZORUNLU ALAN");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*");
        jLabel4.setToolTipText("ZORUNLU ALAN");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("*");
        jLabel5.setToolTipText("ZORUNLU ALAN");

        javax.swing.GroupLayout pnlProjeGirisLayout = new javax.swing.GroupLayout(pnlProjeGiris);
        pnlProjeGiris.setLayout(pnlProjeGirisLayout);
        pnlProjeGirisLayout.setHorizontalGroup(
            pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjeGirisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProjeGirisLayout.createSequentialGroup()
                        .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblprojeTeklifKodu)
                            .addGroup(pnlProjeGirisLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblprojeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlProjeGirisLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblmusteriAdi))
                            .addGroup(pnlProjeGirisLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblprojeHazirlamaTarihi)))
                        .addGap(10, 10, 10)
                        .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtprojeTeklifKodu, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtmusteriAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlProjeGirisLayout.createSequentialGroup()
                                    .addComponent(calendarprojeHazirlamaTarihi, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(36, 36, 36)
                                    .addComponent(lblGidenProjeAdi)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblGidenProjeID)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblGidenProjeIcerikID))
                                .addComponent(txtprojeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        pnlProjeGirisLayout.setVerticalGroup(
            pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjeGirisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblprojeAdi)
                    .addComponent(txtprojeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(8, 8, 8)
                .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblmusteriAdi)
                    .addComponent(txtmusteriAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblGidenProjeAdi)
                        .addComponent(lblGidenProjeID)
                        .addComponent(lblGidenProjeIcerikID))
                    .addComponent(calendarprojeHazirlamaTarihi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblprojeHazirlamaTarihi)
                        .addComponent(jLabel5)))
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProjeGirisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblprojeTeklifKodu)
                    .addComponent(txtprojeTeklifKodu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlProjeArama.setBackground(new java.awt.Color(204, 255, 204));
        pnlProjeArama.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ARAMA PROJE DETAY", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 1, 10), new java.awt.Color(153, 51, 0))); // NOI18N

        lblAramaMesajProjeIcerik.setText("Mesaj : ");

        txtAramaMalzemeGrubu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAramaMalzemeGrubuKeyReleased(evt);
            }
        });

        lblAramaMalzemeGrubu.setText("Malzeme Grubu");

        lblAramaMalzemeAdi.setText("Malzeme Adı:");

        txtAramaMalzemeAdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAramaMalzemeAdiKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlProjeAramaLayout = new javax.swing.GroupLayout(pnlProjeArama);
        pnlProjeArama.setLayout(pnlProjeAramaLayout);
        pnlProjeAramaLayout.setHorizontalGroup(
            pnlProjeAramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjeAramaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProjeAramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProjeAramaLayout.createSequentialGroup()
                        .addComponent(lblAramaMalzemeAdi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(txtAramaMalzemeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlProjeAramaLayout.createSequentialGroup()
                        .addComponent(lblAramaMalzemeGrubu, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAramaMalzemeGrubu, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlProjeAramaLayout.createSequentialGroup()
                        .addComponent(lblAramaMesajProjeIcerik, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProjeAramaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aramaIcinProjeID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
        );
        pnlProjeAramaLayout.setVerticalGroup(
            pnlProjeAramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjeAramaLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlProjeAramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProjeAramaLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pnlProjeAramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAramaMalzemeAdi)
                            .addComponent(txtAramaMalzemeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlProjeAramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAramaMalzemeGrubu)
                        .addComponent(txtAramaMalzemeGrubu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lblAramaMesajProjeIcerik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aramaIcinProjeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tableProjeGiris.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        tableProjeGiris.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tableProjeGiris.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProjeGiris.setSelectionBackground(new java.awt.Color(51, 255, 255));
        tableProjeGiris.setSelectionForeground(new java.awt.Color(153, 0, 0));
        tableProjeGiris.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableProjeGiris.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProjeGirisMouseClicked(evt);
            }
        });
        tableProjeGiris.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableProjeGirisKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableProjeGiris);

        pnlButonlar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnMalzemeGirisSil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        btnMalzemeGirisSil.setText("MALZEME SİL");
        btnMalzemeGirisSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeGirisSilActionPerformed(evt);
            }
        });

        btnMalzemeGirisKaydet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ekle.png"))); // NOI18N
        btnMalzemeGirisKaydet.setText("MALZEME EKLE");
        btnMalzemeGirisKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeGirisKaydetActionPerformed(evt);
            }
        });

        btnMalzemeGirisDuzenle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        btnMalzemeGirisDuzenle.setText("MALZEME DÜZENLE");
        btnMalzemeGirisDuzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeGirisDuzenleActionPerformed(evt);
            }
        });

        btnProjeDetayYazdir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        btnProjeDetayYazdir.setText("YAZDIR");
        btnProjeDetayYazdir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeDetayYazdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeDetayYazdirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButonlarLayout = new javax.swing.GroupLayout(pnlButonlar);
        pnlButonlar.setLayout(pnlButonlarLayout);
        pnlButonlarLayout.setHorizontalGroup(
            pnlButonlarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButonlarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMalzemeGirisKaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMalzemeGirisSil, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMalzemeGirisDuzenle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnProjeDetayYazdir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlButonlarLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnMalzemeGirisDuzenle, btnMalzemeGirisKaydet, btnMalzemeGirisSil, btnProjeDetayYazdir});

        pnlButonlarLayout.setVerticalGroup(
            pnlButonlarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButonlarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlButonlarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMalzemeGirisSil)
                    .addComponent(btnMalzemeGirisDuzenle)
                    .addComponent(btnMalzemeGirisKaydet)
                    .addComponent(btnProjeDetayYazdir))
                .addGap(62, 62, 62))
        );

        pnlButonlarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnMalzemeGirisDuzenle, btnMalzemeGirisKaydet, btnMalzemeGirisSil, btnProjeDetayYazdir});

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnMalzemeExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/extract.png"))); // NOI18N
        btnMalzemeExport.setText("Projeleri Dışa Aktar CSV");
        btnMalzemeExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeExportActionPerformed(evt);
            }
        });

        btnProjeDetayExcelAktar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/excel.png"))); // NOI18N
        btnProjeDetayExcelAktar.setText("Projeleri Dışa Aktar EXCEL");
        btnProjeDetayExcelAktar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeDetayExcelAktarActionPerformed(evt);
            }
        });

        btnAcProjeDetayImportGUI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/import.png"))); // NOI18N
        btnAcProjeDetayImportGUI.setText("Projeleri İçe Aktar");
        btnAcProjeDetayImportGUI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcProjeDetayImportGUIActionPerformed(evt);
            }
        });

        btnProjeDetayRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh.png"))); // NOI18N
        btnProjeDetayRefresh.setText("Tabloyu Tazele");
        btnProjeDetayRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeDetayRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnProjeDetayExcelAktar, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(btnProjeDetayRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnMalzemeExport, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAcProjeDetayImportGUI, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAcProjeDetayImportGUI, btnMalzemeExport, btnProjeDetayExcelAktar, btnProjeDetayRefresh});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMalzemeExport, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAcProjeDetayImportGUI))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProjeDetayExcelAktar)
                    .addComponent(btnProjeDetayRefresh))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAcProjeDetayImportGUI, btnMalzemeExport, btnProjeDetayExcelAktar, btnProjeDetayRefresh});

        btnProjeGirisFormuTemizle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/temizle.png"))); // NOI18N
        btnProjeGirisFormuTemizle.setText("FORMU TEMİZLE");
        btnProjeGirisFormuTemizle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeGirisFormuTemizle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeGirisFormuTemizleActionPerformed(evt);
            }
        });

        btnProjeGirisKaydet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        btnProjeGirisKaydet.setText("PROJE KAYDET");
        btnProjeGirisKaydet.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeGirisKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeGirisKaydetActionPerformed(evt);
            }
        });

        btnProjeGirisDuzenle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        btnProjeGirisDuzenle.setText("PROJE DÜZENLE");
        btnProjeGirisDuzenle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeGirisDuzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeGirisDuzenleActionPerformed(evt);
            }
        });

        btnProjeGirisSil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        btnProjeGirisSil.setText("PROJE SİL");
        btnProjeGirisSil.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeGirisSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeGirisSilActionPerformed(evt);
            }
        });

        tableProjeninMalzemeleri.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        tableProjeninMalzemeleri.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tableProjeninMalzemeleri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProjeninMalzemeleri.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tableProjeninMalzemeleri);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ARAMA PROJE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 1, 10), new java.awt.Color(153, 51, 0))); // NOI18N

        lblAramaprojeTeklifKodu.setText("Proje Teklif Kodu");

        txtAramaprojeTeklifKodu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAramaprojeTeklifKoduKeyReleased(evt);
            }
        });

        txtAramamusteriAdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAramamusteriAdiKeyReleased(evt);
            }
        });

        lblAramamusteriAdi.setText("Müşteri Adı");

        txtAramaprojeAdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAramaprojeAdiKeyReleased(evt);
            }
        });

        lblAramaprojeAdi.setText("Proje Adı");

        lblAramaMesajProje.setBackground(new java.awt.Color(204, 255, 204));
        lblAramaMesajProje.setText("Mesaj : ");

        txtToplamBirimFiyat.setColumns(20);
        txtToplamBirimFiyat.setRows(5);
        jScrollPane4.setViewportView(txtToplamBirimFiyat);

        txtToplamMaliyetiGor.setColumns(20);
        txtToplamMaliyetiGor.setRows(5);
        jScrollPane3.setViewportView(txtToplamMaliyetiGor);

        txtToplamBirimTeklifiGor.setColumns(20);
        txtToplamBirimTeklifiGor.setRows(5);
        jScrollPane6.setViewportView(txtToplamBirimTeklifiGor);

        txtGenelToplamTeklifiGor.setColumns(20);
        txtGenelToplamTeklifiGor.setRows(5);
        jScrollPane5.setViewportView(txtGenelToplamTeklifiGor);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblAramaprojeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(lblAramamusteriAdi)
                        .addGap(82, 82, 82)
                        .addComponent(lblAramaprojeTeklifKodu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtAramaprojeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAramamusteriAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAramaprojeTeklifKodu, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblAramaMesajProje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAramamusteriAdi, txtAramaprojeAdi, txtAramaprojeTeklifKodu});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAramaprojeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAramamusteriAdi)
                            .addComponent(lblAramaprojeTeklifKodu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAramaprojeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAramamusteriAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAramaprojeTeklifKodu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAramaMesajProje)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnProjeGirisYazdir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        btnProjeGirisYazdir.setText("YAZDIR");
        btnProjeGirisYazdir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeGirisYazdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeGirisYazdirActionPerformed(evt);
            }
        });

        menuDosya.setText("Dosya");

        menuItemExportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exporexcel16.png"))); // NOI18N
        menuItemExportExcel.setText("Export Excel");
        menuItemExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeDetayExcelAktarActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemExportExcel);

        menuItemExportCsv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/export16.png"))); // NOI18N
        menuItemExportCsv.setText("Export CSV");
        menuItemExportCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeExportActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemExportCsv);

        menuItemImportCsv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/impor16.png"))); // NOI18N
        menuItemImportCsv.setText("Import CSV");
        menuItemImportCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcProjeDetayImportGUIActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemImportCsv);

        menuItemProjeAdYazdir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/print16.png"))); // NOI18N
        menuItemProjeAdYazdir.setText("Proje Adları Yazdır");
        menuItemProjeAdYazdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeGirisYazdirActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemProjeAdYazdir);

        menuItemProjeDetayYazdir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/print16.png"))); // NOI18N
        menuItemProjeDetayYazdir.setText("Proje Detay Yazdır");
        menuItemProjeDetayYazdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeDetayYazdirActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemProjeDetayYazdir);

        menuItemCikis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cıkıs16.png"))); // NOI18N
        menuItemCikis.setText("Çıkış");
        menuItemCikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCikisActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemCikis);

        jMenuBar1.add(menuDosya);

        menuDuzen.setText("Düzen");

        menuToplamlar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sum2.png"))); // NOI18N
        menuToplamlar.setText("Toplamlar");

        menuItemToplamBirimFiyat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sum4.png"))); // NOI18N
        menuItemToplamBirimFiyat.setText("Toplam Birim Fiyat");
        menuItemToplamBirimFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemToplamBirimFiyatActionPerformed(evt);
            }
        });
        menuToplamlar.add(menuItemToplamBirimFiyat);

        menuItemToplamMaliyet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sum4.png"))); // NOI18N
        menuItemToplamMaliyet.setText("Toplam Maliyet");
        menuItemToplamMaliyet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemToplamMaliyetActionPerformed(evt);
            }
        });
        menuToplamlar.add(menuItemToplamMaliyet);

        menuItemToplamBirimTeklif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sum4.png"))); // NOI18N
        menuItemToplamBirimTeklif.setText("Toplam Birim Teklif");
        menuItemToplamBirimTeklif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemToplamBirimTeklifActionPerformed(evt);
            }
        });
        menuToplamlar.add(menuItemToplamBirimTeklif);

        menuItemGenelToplamTeklif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sum4.png"))); // NOI18N
        menuItemGenelToplamTeklif.setText("Genel Toplam Teklif");
        menuItemGenelToplamTeklif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemGenelToplamTeklifActionPerformed(evt);
            }
        });
        menuToplamlar.add(menuItemGenelToplamTeklif);

        menuDuzen.add(menuToplamlar);

        menuItemMalzemeKayitSayisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sum1.png"))); // NOI18N
        menuItemMalzemeKayitSayisi.setText("Toplam Malzeme  Kayıt Sayısı");
        menuItemMalzemeKayitSayisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemMalzemeKayitSayisiActionPerformed(evt);
            }
        });
        menuDuzen.add(menuItemMalzemeKayitSayisi);

        menuItemProjeSayisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sum3.png"))); // NOI18N
        menuItemProjeSayisi.setText("Toplam Proje Sayısı");
        menuItemProjeSayisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemProjeSayisiActionPerformed(evt);
            }
        });
        menuDuzen.add(menuItemProjeSayisi);

        jMenuBar1.add(menuDuzen);

        menuYardim.setText("Yardım");

        menuItemHakkinda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/hakkımızda16.png"))); // NOI18N
        menuItemHakkinda.setText("Hakkında");
        menuItemHakkinda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemHakkindaActionPerformed(evt);
            }
        });
        menuYardim.add(menuItemHakkinda);

        jMenuBar1.add(menuYardim);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnlProjeGiris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnProjeGirisFormuTemizle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(btnProjeGirisSil, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProjeGirisDuzenle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProjeGirisKaydet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProjeGirisYazdir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pnlProjeArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(pnlButonlar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlProjeGiris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnProjeGirisKaydet)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(btnProjeGirisDuzenle, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnProjeGirisSil, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnProjeGirisFormuTemizle)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnProjeGirisYazdir)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlButonlar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlProjeArama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnProjeGirisDuzenle, btnProjeGirisFormuTemizle, btnProjeGirisKaydet, btnProjeGirisSil});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProjeGirisKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeGirisKaydetActionPerformed
        projeGirisKaydet();
        

    }//GEN-LAST:event_btnProjeGirisKaydetActionPerformed

    private void btnProjeGirisSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeGirisSilActionPerformed

                  projeGirisSil();  

        

    }//GEN-LAST:event_btnProjeGirisSilActionPerformed

    private void btnProjeGirisDuzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeGirisDuzenleActionPerformed
        projeGirisGuncelle();
    }//GEN-LAST:event_btnProjeGirisDuzenleActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      baglanti=Mysqlbaglantisi.baglan();
        

        projeGirisTabloyaGetir();
          kullanicininYetkileriniBul(); 

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
              if (baglanti != null) {

            try {
                baglanti.close();
            } catch (Exception e) {
            }

        }

        if (resultSet != null) {
            try {
                resultSet.close();
            } catch (Exception e) {
            }
        }


        if (preparedStatement != null) {
            try {
                preparedStatement.close();
            } catch (Exception e) {
            }
        }
        
//                    if (callableStatement != null) {
//                try {
//                    callableStatement.close();
//                } catch (Exception e) {
//                }
//            }
    }//GEN-LAST:event_formWindowClosing

    private void tableProjeGirisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProjeGirisMouseClicked
tablodakiGirisProjeleriTxtFieldlaraGetir();
tablodakiProjelerinMalzemeleriniGetir();

txtAramaMalzemeGrubu.setText(null);
txtAramaMalzemeAdi.setText(null);
aramaIcinProjeID.setText( tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tableProjeGirisMouseClicked

    private void tableProjeGirisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableProjeGirisKeyPressed
tablodakiGirisProjeleriTxtFieldlaraGetir();
tablodakiProjelerinMalzemeleriniGetir();
txtAramaMalzemeGrubu.setText(null);
txtAramaMalzemeAdi.setText(null);
aramaIcinProjeID.setText( tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tableProjeGirisKeyPressed

    private void btnMalzemeGirisKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMalzemeGirisKaydetActionPerformed
        if (tableProjeGiris.getSelectedRowCount() != 0) {


            ProjeMalzemeEkleGUI projeMalzemeEkleGUI = new ProjeMalzemeEkleGUI();
            projeMalzemeEkleGUI.setVisible(true);

            lblGidenProjeID.setText(tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 0).toString());
            lblGidenProjeAdi.setText(tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 2).toString());
        
        } else {
            JOptionPane.showMessageDialog(null, "HATA MEYDA GELDİ\nLütfen Bir Seçim Yapınız.", "MESAJ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnMalzemeGirisKaydetActionPerformed

    private void btnMalzemeGirisSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMalzemeGirisSilActionPerformed
       projeyeKayitliMalzemeleriSil();
    }//GEN-LAST:event_btnMalzemeGirisSilActionPerformed

    private void btnMalzemeGirisDuzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMalzemeGirisDuzenleActionPerformed

         if (tableProjeninMalzemeleri.getSelectedRowCount() != 0) {
                     
      ProjeMalzemeDuzenleGUI projeMalzemeDuzenleGUI=new ProjeMalzemeDuzenleGUI();
      projeMalzemeDuzenleGUI.setVisible(true);
         
        lblGidenProjeID.setText( tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 0).toString());
        lblGidenProjeAdi.setText( tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 2).toString());
        lblGidenProjeIcerikID.setText( tableProjeninMalzemeleri.getModel().getValueAt(tableProjeninMalzemeleri.getSelectedRow(), 0).toString());
         }
         else{
                JOptionPane.showMessageDialog(null, "HATA MEYDA GELDİ\nLütfen Bir Seçim Yapınız.", "MESAJ", JOptionPane.ERROR_MESSAGE);  
         }
     
    }//GEN-LAST:event_btnMalzemeGirisDuzenleActionPerformed

    private void txtAramaMalzemeGrubuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAramaMalzemeGrubuKeyReleased
        
//        if(tableProjeninMalzemeleri.getRowCount()!=0){
              aramaYapProjeIcerik();
//        }
      
    }//GEN-LAST:event_txtAramaMalzemeGrubuKeyReleased

    private void txtAramaMalzemeAdiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAramaMalzemeAdiKeyReleased
        aramaYapProjeIcerik();
    }//GEN-LAST:event_txtAramaMalzemeAdiKeyReleased

    private void btnMalzemeExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMalzemeExportActionPerformed
       JFileChooser fileopen = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("CSV files", "csv");
        fileopen.addChoosableFileFilter(filter);
        int answer = fileopen.showDialog(null, "Save file");

        if (answer == JFileChooser.APPROVE_OPTION) {//Ok a basılmışsa
            File f = fileopen.getSelectedFile();
            JOptionPane.showMessageDialog(null, "Dosya Kaydedildi", "Proje Csv Kayit",JOptionPane.INFORMATION_MESSAGE);
            try {

                exportTable(tableProjeninMalzemeleri, f);
            } catch (IOException ex) {
                     JOptionPane.showMessageDialog(null, "xxxxxxxxxxxx", "Proje Csv Kayit",JOptionPane.INFORMATION_MESSAGE);
            }

        }

    }//GEN-LAST:event_btnMalzemeExportActionPerformed

    private void btnAcProjeDetayImportGUIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcProjeDetayImportGUIActionPerformed
        ProjeImportGUI projeImportGUI=new ProjeImportGUI();
        projeImportGUI.setVisible(true);
    }//GEN-LAST:event_btnAcProjeDetayImportGUIActionPerformed

    private void btnProjeDetayExcelAktarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeDetayExcelAktarActionPerformed

               txtToplamMaliyetiGor.setText(null);
        toplamMaliyetiGor(" TOPLAM TL= ", "TL");
        toplamMaliyetiGor(" TOPLAM USD= ", "USD");
        toplamMaliyetiGor(" TOPLAM EURO= ", "EURO");
        
                txtToplamBirimFiyat.setText("");
        toplamBirimFiyatiGor(" TOPLAM TL= ", "TL");
        toplamBirimFiyatiGor(" TOPLAM USD= ", "USD");
        toplamBirimFiyatiGor(" TOPLAM EURO= ", "EURO");
        
              txtToplamBirimTeklifiGor.setText(null);
        toplamBirimTeklifiGor(" TOPLAM TL= ", "TL");
        toplamBirimTeklifiGor(" TOPLAM USD= ", "USD");
        toplamBirimTeklifiGor(" TOPLAM EURO= ", "EURO");
        
              txtGenelToplamTeklifiGor.setText(null);
        genelToplamTeklifiGor(" TOPLAM TL= ", "TL");
        genelToplamTeklifiGor(" TOPLAM USD= ", "USD");
        genelToplamTeklifiGor(" TOPLAM EURO= ", "EURO");
        
        
        
        
        
        
        
        
        
        JFileChooser fileopen = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("EXCEL files", "xls");
        fileopen.addChoosableFileFilter(filter);
        int answer = fileopen.showDialog(null, "Save file");

        if (answer == JFileChooser.APPROVE_OPTION) {//Ok a basılmışsa
            File f = fileopen.getSelectedFile();
            JOptionPane.showMessageDialog(null, "Dosya Kaydedildi", "Proje XLS Kayit",JOptionPane.INFORMATION_MESSAGE);
            try {

                exportExcelTable(tableProjeninMalzemeleri, f);
            } catch (IOException ex) {
            }

        }
    }//GEN-LAST:event_btnProjeDetayExcelAktarActionPerformed

    private void btnProjeDetayRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeDetayRefreshActionPerformed

        if(tableProjeGiris.getSelectedRow()!=-1){//tableProjegiris tablosundan id değeri null donmemesi için
        
        tablodakiProjelerinMalzemeleriniGetir();
             }  
        formuTemizle();
     
        
    }//GEN-LAST:event_btnProjeDetayRefreshActionPerformed

    private void btnProjeDetayYazdirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeDetayYazdirActionPerformed
        projeDetayYazdir();
    }//GEN-LAST:event_btnProjeDetayYazdirActionPerformed

    private void btnProjeGirisFormuTemizleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeGirisFormuTemizleActionPerformed
        formuTemizle();
            projeGirisTabloyaGetir();
    }//GEN-LAST:event_btnProjeGirisFormuTemizleActionPerformed

    private void menuItemToplamMaliyetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemToplamMaliyetActionPerformed
        txtToplamMaliyetiGor.setText(null);
        toplamMaliyetiGor(" TOPLAM TL= ", "TL");
        toplamMaliyetiGor(" TOPLAM USD= ", "USD");
        toplamMaliyetiGor(" TOPLAM EURO= ", "EURO");
        JOptionPane.showMessageDialog(null, txtToplamMaliyetiGor.getText(), "Toplam Maliyet", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_menuItemToplamMaliyetActionPerformed

    private void menuItemToplamBirimFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemToplamBirimFiyatActionPerformed
        txtToplamBirimFiyat.setText("");
        toplamBirimFiyatiGor(" TOPLAM TL= ", "TL");
        toplamBirimFiyatiGor(" TOPLAM USD= ", "USD");
        toplamBirimFiyatiGor(" TOPLAM EURO= ", "EURO");
        JOptionPane.showMessageDialog(null, txtToplamBirimFiyat.getText(), "Toplam Birim Fiyat", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_menuItemToplamBirimFiyatActionPerformed

    private void menuItemToplamBirimTeklifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemToplamBirimTeklifActionPerformed
       txtToplamBirimTeklifiGor.setText(null);
        toplamBirimTeklifiGor(" TOPLAM TL= ", "TL");
        toplamBirimTeklifiGor(" TOPLAM USD= ", "USD");
        toplamBirimTeklifiGor(" TOPLAM EURO= ", "EURO");
        JOptionPane.showMessageDialog(null, txtToplamBirimTeklifiGor.getText(), "Toplam Birim Teklif", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_menuItemToplamBirimTeklifActionPerformed

    private void menuItemGenelToplamTeklifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemGenelToplamTeklifActionPerformed
      txtGenelToplamTeklifiGor.setText(null);
        genelToplamTeklifiGor(" TOPLAM TL= ", "TL");
        genelToplamTeklifiGor(" TOPLAM USD= ", "USD");
        genelToplamTeklifiGor(" TOPLAM EURO= ", "EURO");
        JOptionPane.showMessageDialog(null, txtGenelToplamTeklifiGor.getText(), "Genel Toplam Teklif", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_menuItemGenelToplamTeklifActionPerformed

    private void txtAramaprojeAdiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAramaprojeAdiKeyReleased
        aramaYapProje();
    }//GEN-LAST:event_txtAramaprojeAdiKeyReleased

    private void txtAramamusteriAdiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAramamusteriAdiKeyReleased
        aramaYapProje();
    }//GEN-LAST:event_txtAramamusteriAdiKeyReleased

    private void txtAramaprojeTeklifKoduKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAramaprojeTeklifKoduKeyReleased
               aramaYapProje();

    }//GEN-LAST:event_txtAramaprojeTeklifKoduKeyReleased

    private void menuItemHakkindaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemHakkindaActionPerformed
               Hakkimizda hakkimizda=new Hakkimizda();
        hakkimizda.setVisible(true);
    }//GEN-LAST:event_menuItemHakkindaActionPerformed

    private void menuItemCikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCikisActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItemCikisActionPerformed

    private void btnProjeGirisYazdirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeGirisYazdirActionPerformed
       projeGirisYazdir();
    }//GEN-LAST:event_btnProjeGirisYazdirActionPerformed

    private void menuItemMalzemeKayitSayisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemMalzemeKayitSayisiActionPerformed
        JOptionPane.showMessageDialog(null,  "Toplam Malzeme Kayıt Sayısı="+tableProjeninMalzemeleri.getRowCount()
            , "Toplam Malzeme Kayıt Sayısı", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_menuItemMalzemeKayitSayisiActionPerformed

    private void menuItemProjeSayisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemProjeSayisiActionPerformed
             JOptionPane.showMessageDialog(null,  "Toplam Proje Sayısı="+tableProjeGiris.getRowCount()
            , "Toplam Proje Sayısı", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_menuItemProjeSayisiActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjeAnaGirisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjeAnaGirisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjeAnaGirisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjeAnaGirisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjeAnaGirisGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aramaIcinProjeID;
    private javax.swing.JButton btnAcProjeDetayImportGUI;
    private javax.swing.JButton btnMalzemeExport;
    private javax.swing.JButton btnMalzemeGirisDuzenle;
    private javax.swing.JButton btnMalzemeGirisKaydet;
    private javax.swing.JButton btnMalzemeGirisSil;
    private javax.swing.JButton btnProjeDetayExcelAktar;
    private javax.swing.JButton btnProjeDetayRefresh;
    private javax.swing.JButton btnProjeDetayYazdir;
    private javax.swing.JButton btnProjeGirisDuzenle;
    private javax.swing.JButton btnProjeGirisFormuTemizle;
    private javax.swing.JButton btnProjeGirisKaydet;
    private javax.swing.JButton btnProjeGirisSil;
    private javax.swing.JButton btnProjeGirisYazdir;
    private com.toedter.calendar.JDateChooser calendarprojeHazirlamaTarihi;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAramaMalzemeAdi;
    private javax.swing.JLabel lblAramaMalzemeGrubu;
    private javax.swing.JLabel lblAramaMesajProje;
    private javax.swing.JLabel lblAramaMesajProjeIcerik;
    private javax.swing.JLabel lblAramamusteriAdi;
    private javax.swing.JLabel lblAramaprojeAdi;
    private javax.swing.JLabel lblAramaprojeTeklifKodu;
    public static javax.swing.JLabel lblGidenProjeAdi;
    public static javax.swing.JLabel lblGidenProjeID;
    public static javax.swing.JLabel lblGidenProjeIcerikID;
    private javax.swing.JLabel lblmusteriAdi;
    private javax.swing.JLabel lblprojeAdi;
    private javax.swing.JLabel lblprojeHazirlamaTarihi;
    private javax.swing.JLabel lblprojeTeklifKodu;
    private javax.swing.JMenu menuDosya;
    private javax.swing.JMenu menuDuzen;
    private javax.swing.JMenuItem menuItemCikis;
    private javax.swing.JMenuItem menuItemExportCsv;
    private javax.swing.JMenuItem menuItemExportExcel;
    private javax.swing.JMenuItem menuItemGenelToplamTeklif;
    private javax.swing.JMenuItem menuItemHakkinda;
    private javax.swing.JMenuItem menuItemImportCsv;
    private javax.swing.JMenuItem menuItemMalzemeKayitSayisi;
    private javax.swing.JMenuItem menuItemProjeAdYazdir;
    private javax.swing.JMenuItem menuItemProjeDetayYazdir;
    private javax.swing.JMenuItem menuItemProjeSayisi;
    private javax.swing.JMenuItem menuItemToplamBirimFiyat;
    private javax.swing.JMenuItem menuItemToplamBirimTeklif;
    private javax.swing.JMenuItem menuItemToplamMaliyet;
    private javax.swing.JMenu menuToplamlar;
    private javax.swing.JMenu menuYardim;
    private javax.swing.JPanel pnlButonlar;
    private javax.swing.JPanel pnlProjeArama;
    private javax.swing.JPanel pnlProjeGiris;
    public static javax.swing.JTable tableProjeGiris;
    public static javax.swing.JTable tableProjeninMalzemeleri;
    private javax.swing.JTextField txtAramaMalzemeAdi;
    private javax.swing.JTextField txtAramaMalzemeGrubu;
    private javax.swing.JTextField txtAramamusteriAdi;
    private javax.swing.JTextField txtAramaprojeAdi;
    private javax.swing.JTextField txtAramaprojeTeklifKodu;
    private javax.swing.JTextArea txtGenelToplamTeklifiGor;
    private javax.swing.JTextArea txtToplamBirimFiyat;
    private javax.swing.JTextArea txtToplamBirimTeklifiGor;
    private javax.swing.JTextArea txtToplamMaliyetiGor;
    private javax.swing.JTextField txtmusteriAdi;
    private javax.swing.JTextField txtprojeAdi;
    public static javax.swing.JTextField txtprojeTeklifKodu;
    // End of variables declaration//GEN-END:variables

    private void projeGirisTabloyaGetir() {
       
 try {
            String tabloyuGuncelleSorgusu = "SELECT * FROM tblprojeler ORDER BY projeTeklifKodu DESC";
            preparedStatement = baglanti.prepareStatement(tabloyuGuncelleSorgusu);
            resultSet = preparedStatement.executeQuery();
            tableProjeGiris.setModel(DbUtils.resultSetToTableModel(resultSet));
                        tableProjeGiris.getModel().addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    projeGirisTabloyaGetir  ();
                }
            });
        } catch (Exception e) {
        }

    }



    private void projeGirisKaydet() {
      
      
        
 projeTeklifKoduOlustur();
        if (!(txtprojeAdi.getText().trim().equals("")) && !(txtmusteriAdi.getText().trim().equals(""))) {

            try {
                String eklemeSorgusu = "INSERT INTO tblprojeler (projeTeklifKodu, projeAdi, projeHazirlamaTarihi, musteriAdi) "
                        + " VALUES(?, ?, ?, ?)";

                preparedStatement = baglanti.prepareStatement(eklemeSorgusu);

                preparedStatement.setString(1, txtprojeTeklifKodu.getText().toString());

                preparedStatement.setString(2, txtprojeAdi.getText().toString());
     

                DateFormat dateFormat=new SimpleDateFormat("dd.MMM.yyyy");
                String takvim=new String(dateFormat.format(calendarprojeHazirlamaTarihi.getDate()));
                
//                DateFormat dateFormat=new SimpleDateFormat("dd.MMM.yyyy");
//                String takvim=dateFormat.format(calendarprojeHazirlamaTarihi.getDate());

                preparedStatement.setString(3, takvim.toString());

                preparedStatement.setString(4, txtmusteriAdi.getText().toString());

                preparedStatement.execute();


                formuTemizle();
         
        
                     projeGirisTabloyaGetir();
       
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Zorunlu Alanları Doldurunuz.", "MESAJ", JOptionPane.ERROR_MESSAGE);
                txtprojeTeklifKodu.setText(null);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Zorunlu Alanları Doldurunuz.", "MESAJ", JOptionPane.ERROR_MESSAGE);
                txtprojeTeklifKodu.setText(null);
        }
    }

    private void formuTemizle() {
       txtmusteriAdi.setText(null);
       txtprojeAdi.setText(null);
       calendarprojeHazirlamaTarihi.setDate(null);
       txtprojeTeklifKodu.setText(null);
    }

    private void projeGirisSil() {
        if (tableProjeGiris.getSelectedRowCount() != 0) {//Tabloda herhangi bir satır seçilmişse silme işleme gerçekleşsin

            if (tableProjeninMalzemeleri.getRowCount() == 0) {//tablonun kayılı malzemesi yoksa
                Object[] dugmeIsimleri = {"Evet",
                    "Hayır"};
                int gelenDeger = JOptionPane.showOptionDialog(rootPane, "Emin misiniz?", "UYARI MESAJI",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        (new javax.swing.ImageIcon(getClass().getResource("/icons/uyari.png"))),
                        dugmeIsimleri,
                        dugmeIsimleri[1]);


                if (gelenDeger == 0) {//yes e basılmışsa


                    projeninKendisiniSil();


                } else if (gelenDeger == 1) {//no ya basılmışsa
                }
            } else {//tablonun kayitli malzemesi varsa
                Object[] dugmeIsimleri = {"Evet",
                    "Hayır"};
                int gelenDeger = JOptionPane.showOptionDialog(rootPane, "Bu projeye kaydedilmiş malzemeler var. \n Emin misiniz?", "UYARI MESAJI",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        (new javax.swing.ImageIcon(getClass().getResource("/icons/uyari.png"))),
                        dugmeIsimleri,
                        dugmeIsimleri[1]);


                if (gelenDeger == 0) {//yes e basılmışsa

                   projeninMalzemeleriniSil();
                    projeninKendisiniSil();
 

                } else if (gelenDeger == 1) {//no ya basılmışsa
                }
            }


        } else {
            JOptionPane.showMessageDialog(null, "HATA MEYDA GELDİ\nLütfen Bir Seçim Yapınız.", "MESAJ", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void projeninKendisiniSil(){
                    try {

                String silmeSorgusu = "DELETE FROM tblprojeler WHERE p_ID = ?";   
              
                
                preparedStatement = baglanti.prepareStatement(silmeSorgusu);
                
                int satirNumarasi = tableProjeGiris.getSelectedRow();
                //tablodaki o andaki sırası    //ilk kolon sütun
                preparedStatement.setString(1, tableProjeGiris.getModel().getValueAt(satirNumarasi, 0).toString());                
                
                preparedStatement.execute();
                
                 JOptionPane.showMessageDialog(null, "Silme işlemi\nbaşarılı olarak gerçekleştirildi.", "MESAJ",
                    JOptionPane.INFORMATION_MESSAGE);
                
                projeGirisTabloyaGetir();
                formuTemizle();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "HATA22 :" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
                
            }
    }
    
    private void projeninMalzemeleriniSil(){
          try {

                String silmeSorgusu = "DELETE FROM tblprojeicerik WHERE p_ID = ?";   
              
                
                preparedStatement = baglanti.prepareStatement(silmeSorgusu);
                
                int satirNumarasi = tableProjeGiris.getSelectedRow();
                //tablodaki o andaki sırası    //ilk kolon sütun
                preparedStatement.setString(1, tableProjeGiris.getModel().getValueAt(satirNumarasi, 0).toString());                
                
                preparedStatement.execute();
                
//                 JOptionPane.showMessageDialog(null, "Silme işlemi\nbaşarılı olarak gerçekleştirildi.", "MESAJ",
//                    JOptionPane.INFORMATION_MESSAGE);
                
tablodakiProjelerinMalzemeleriniGetir();
                formuTemizle();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "HATA :" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
                
            }
    }
    

    private void projeGirisGuncelle() {
      if (!(txtprojeAdi.getText().trim().equals("")) && !(txtmusteriAdi.getText().trim().equals(""))) {

            try {



                String guncellemeSorgusu = "UPDATE tblprojeler SET "
                        + " projeAdi = ?, "
                        + " projeHazirlamaTarihi = ?, "
                        + " musteriAdi = ? "
                        + " WHERE p_ID = ? ";

                preparedStatement = baglanti.prepareStatement(guncellemeSorgusu);

                preparedStatement.setString(1, txtprojeAdi.getText());

   
            DateFormat dateFormat=new SimpleDateFormat("dd.MMM.yyyy");
             String takvim=new String(dateFormat.format(calendarprojeHazirlamaTarihi.getDate()));
                           
                
//                DateFormat dateFormat=new SimpleDateFormat("dd.MMM.yyyy");
//                String takvim=dateFormat.format(calendarprojeHazirlamaTarihi.getDate());

                preparedStatement.setString(2, takvim);
                
                preparedStatement.setString(3, txtmusteriAdi.getText());
            

              int satirNumarasi = tableProjeGiris.getSelectedRow();
                //tablodaki o andaki sırası    //ilk kolon sütun
                preparedStatement.setString(4, tableProjeGiris.getModel().getValueAt(satirNumarasi, 0).toString());

                preparedStatement.executeUpdate();

                JOptionPane.showMessageDialog(null, "Gücellenme işlemi\nbaşarılı olarak gerçekleştirildi.", "MESAJ",
                        JOptionPane.INFORMATION_MESSAGE);

                projeGirisTabloyaGetir();
                formuTemizle();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Zorunlu Alanları Doldurunuz.", "MESAJ", JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Zorunlu Alanları Doldurunuz.", "MESAJ", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void tablodakiGirisProjeleriTxtFieldlaraGetir() {
    formuTemizle();

       int satirNumarasi = tableProjeGiris.getSelectedRow();

            txtprojeTeklifKodu.setText(tableProjeGiris.getModel().getValueAt(satirNumarasi, 1).toString());
            txtprojeAdi.setText(tableProjeGiris.getModel().getValueAt(satirNumarasi, 2).toString());           

try {

          String deger=tableProjeGiris.getModel().getValueAt(satirNumarasi, 3).toString();
            calendarprojeHazirlamaTarihi.setDateFormatString("dd.MMM.yyyy");
           Date date = new SimpleDateFormat("dd.MMM.yyyy").parse(deger);
           calendarprojeHazirlamaTarihi.setDate(date);

        } catch (ParseException ex) {
            Logger.getLogger(ProjeAnaGirisGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
          
          txtmusteriAdi.setText(tableProjeGiris.getModel().getValueAt(satirNumarasi, 4).toString());
    }

    private void tablodakiProjelerinMalzemeleriniGetir() {
        try {
           
            String sql_sorgu="SELECT * FROM tblprojeicerik WHERE p_ID=?";
           
             int satirNumarasi = tableProjeGiris.getSelectedRow();
             preparedStatement = baglanti.prepareStatement(sql_sorgu);
            preparedStatement.setString(1, tableProjeGiris.getModel().getValueAt(satirNumarasi, 0).toString());
             resultSet = preparedStatement.executeQuery();
             
             tableProjeninMalzemeleri.setModel(DbUtils.resultSetToTableModel(resultSet));   
                                     tableProjeninMalzemeleri.getModel().addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    tablodakiProjelerinMalzemeleriniGetir  ();
                }
            });
             
        } catch (Exception e) {
           // JOptionPane.showMessageDialog(null, "HATA:" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
        }
       
    }

    private void projeyeKayitliMalzemeleriSil() {
        if (tableProjeninMalzemeleri.getSelectedRowCount() != 0) {//Tabloda herhangi bir satır seçilmişse silme işleme gerçekleşsin
            Object[] dugmeIsimleri = {"Evet",
                "Hayır"};
            int gelenDeger = JOptionPane.showOptionDialog(rootPane, "Emin misiniz?", "UYARI MESAJI",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    (new javax.swing.ImageIcon(getClass().getResource("/icons/uyari.png"))),
                    dugmeIsimleri,
                    dugmeIsimleri[1]);


            if (gelenDeger == 0) {

                try {


                    String silmeSorgusu = "DELETE FROM tblprojeicerik WHERE pi_ID = ?";


                    preparedStatement = baglanti.prepareStatement(silmeSorgusu);

                    int satirNumarasi = tableProjeninMalzemeleri.getSelectedRow();
                    //tablodaki o andaki sırası    //ilk kolon sütun
                    preparedStatement.setString(1, tableProjeninMalzemeleri.getModel().getValueAt(satirNumarasi, 0).toString());

                    preparedStatement.execute();

                    JOptionPane.showMessageDialog(null, "Silme işlemi\nbaşarılı olarak gerçekleştirildi.", "MESAJ",
                            JOptionPane.INFORMATION_MESSAGE);
               tablodakiProjelerinMalzemeleriniSilmedenSonraGetir();
                   // projeGirisTabloyaGetir();
                  
        
                    formuTemizle();
                } catch (Exception e) {
                    //JOptionPane.showMessageDialog(null, "HATA :" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);

                }



            } else if (gelenDeger == 1) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "HATA MEYDA GELDİ\nLütfen Bir Seçim Yapınız.", "MESAJ", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void projeTeklifKoduOlustur() {
Calendar now = Calendar.getInstance().getInstance(Locale.ENGLISH);
int year = now.get(Calendar.YEAR);
int month = now.get(Calendar.MONTH);
int day = now.get(Calendar.DAY_OF_MONTH);
int hour = now.get(Calendar.HOUR_OF_DAY);
int minute = now.get(Calendar.MINUTE);
int second = now.get(Calendar.SECOND);
String y=String.valueOf(year).substring(2, 4);
     // System.out.println(y+"."+month+"."+day+"."+hour+"."+minute+"."+second);
       
       
       txtprojeTeklifKodu.setText(y+"."+month+"."+day+"."+hour+"."+minute+"."+second);
    }

    private void tableProjeninMalzemelerininTazele() {
    
           try{
             String sql_sorgu="SELECT * FROM tblprojeicerik WHERE p_ID=?";
           
             int satirNumarasi = tableProjeGiris.getSelectedRow();
             preparedStatement = baglanti.prepareStatement(sql_sorgu);
            preparedStatement.setString(1, tableProjeGiris.getModel().getValueAt(satirNumarasi, 0).toString());
             resultSet = preparedStatement.executeQuery();
             
             tableProjeninMalzemeleri.setModel(DbUtils.resultSetToTableModel(resultSet));    
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "HATA :" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
        }
    }

private void aramaYapProjeIcerik() {
          
    try {
 

            String aramaSorgusu = "SELECT  * FROM tblprojeicerik "
                    + "WHERE  Grup LIKE ? AND   Adi LIKE ? AND p_ID = ? ";
            preparedStatement = baglanti.prepareStatement(aramaSorgusu);
            preparedStatement.setString(1, txtAramaMalzemeGrubu.getText() + "%");
            preparedStatement.setString(2, txtAramaMalzemeAdi.getText() + "%");
            preparedStatement.setString(3, aramaIcinProjeID.getText() + "%");
              
            
            resultSet = preparedStatement.executeQuery();
            tableProjeninMalzemeleri.setModel(DbUtils.resultSetToTableModel(resultSet));
               tableProjeninMalzemeleri.getModel().addTableModelListener(new TableModelListener(){
                @Override
                public void tableChanged(TableModelEvent e) {
                    aramaYapProjeIcerik();
                }                       
            });


            if (tableProjeninMalzemeleri.getRowCount() > 0) {
                lblAramaMesajProjeIcerik.setText("Kayıtlar gösteriliyor.");
            } else {
                lblAramaMesajProjeIcerik.setText("Aranılan kayıt bulunamadı.");
            }

            if (txtAramaMalzemeAdi.getText().equals("") && txtAramaMalzemeGrubu.getText().equals("")) {
                lblAramaMesajProjeIcerik.setText("Mesaj : ");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "HATA :" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);

        }
    
    }

    private void exportTable(JTable table, File file) throws IOException {
        try {
                 TableModel model = table.getModel();

        FileWriter fw = new FileWriter(file+".csv");

        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
               // fw.write(model.getValueAt(i, j).toString() + ";");
                if (model.getValueAt(i, j).toString().trim().equals("")) {
                    fw.write(model.getValueAt(i, j).toString() + " ;");
                } else {
                    fw.write(model.getValueAt(i, j).toString() + ";");
                        }

            }

            fw.write("\n");
            //System.out.print("\n");
        }

        fw.close();   
        } catch (Exception e) {
        }


    }

//    private void exportExcelTable(JTable table, File file) throws IOException {
//        TableModel model = table.getModel();
//        FileWriter out = new FileWriter(file + ".xls");
//        String bosluklariDuzelt = null;
//        for (int i = 0; i < model.getColumnCount(); i++) {
//            out.write(model.getColumnName(i) + " \t");
//        }
//        out.write("\n");
//        for (int i = 0; i < model.getRowCount(); i++) {
//            for (int j = 0; j < model.getColumnCount(); j++) {
//
//
//                bosluklariDuzelt = model.getValueAt(i, j).toString().replaceAll(" ", "_");
//
//
//                out.write(bosluklariDuzelt + " \t");
//
//            }
//            out.write("\n");
//        }
//
//        out.close();
//
//    }
    
    
        private void exportExcelTable(JTable table, File file) throws IOException {
        TableModel model = table.getModel();
        FileWriter out = new FileWriter(file + ".xls");
        String bosluklariDuzelt = null;

 String projeAdi=tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 2).toString().replaceAll(" ", "_");
 out.write("Projenin_Adı: "+ projeAdi+"\n");

  String musteriAdi=tableProjeGiris.getModel().getValueAt(tableProjeGiris.getSelectedRow(), 4).toString().replaceAll(" ", "_");
 out.write("Müşterinin_Adı: "+ musteriAdi+"\n");
            
 
 out.write("SıraNO"+ " \t");
       
        for (int i = 4; i < model.getColumnCount()-2; i++) {
            out.write(model.getColumnName(i) + " \t");
        }
        out.write("\n");

        
        
        int sayac=1;
          for (int k = 0; k < model.getRowCount(); k++) {
                 out.write(sayac+" \t");
            for (int j = 4; j < model.getColumnCount()-2; j++) {

                bosluklariDuzelt = model.getValueAt(k, j).toString().replaceAll(" ", "_");
                  
                out.write(bosluklariDuzelt + " \t");

            }
            out.write("\n");
            
              sayac++;
        }
  
              
        out.write("Toplam_Birim_Fiyat"+txtToplamBirimFiyat.getText()+"\n");
         out.write("Toplam_Maliyet"+txtToplamMaliyetiGor.getText()+"\n");
          out.write("Toplam_Birim_Teklif"+txtToplamBirimTeklifiGor.getText()+"\n");
           out.write("Genel_Toplam_Teklif"+txtGenelToplamTeklifiGor.getText()+"\n");
            
            


        out.close();

    }

    private void projeDetayYazdir() {
         
        //" SELECT  projeID,malzemeGrubu,malzemeAltGrubu,malzemeMarkasi,malzemeModeli,malzemeAdi,malzemeBirimi,malzemeFiyati,malzemeParaBirimi,malzemeMiktari FROM tblprojeicerik "

       try {  
            String MALZEMEGRUBU = txtAramaMalzemeGrubu.getText() + "%";
            String MALZEMEADI = txtAramaMalzemeAdi.getText() + "%";

               
        String PROJEID=tableProjeninMalzemeleri.getModel().getValueAt(0, 1).toString();

            
            String raporSorgusu = "SELECT  p_ID,Grup,AltGrup,Marka,Model,Adi,Birim,Miktar,BirimFiyat,ParaBirimi,Top_Maliyet,KarOran,Br_Teklif,Top_Teklif FROM tblprojeicerik "
            + " WHERE Grup LIKE '"+MALZEMEGRUBU+"' AND  Adi LIKE '"+MALZEMEADI+"' AND  p_ID LIKE '"+PROJEID+"'";

            JasperDesign jasperDesign = JRXmlLoader.load("projeninmalzemeleri.jrxml");

                    
            JRDesignQuery designQuery = new JRDesignQuery();
            designQuery.setText(raporSorgusu);
            jasperDesign.setQuery(designQuery);
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, baglanti);
            JasperViewer.viewReport(jasperPrint, false);
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "HATA :", "MESAJ", JOptionPane.ERROR_MESSAGE);
        }
    }

private void kullanicininYetkileriniBul() {
        try {

            preparedStatement = baglanti.prepareStatement("SELECT * FROM tblkullanicilar WHERE kullaniciAdi=?");
             preparedStatement.setString(1, AnaGirisiPaneliGUI.txtKullaniciAdi.getText());
                   resultSet = preparedStatement.executeQuery();
                  String yetki=null;
                   while (resultSet.next()) {
                      yetki= resultSet.getString("kullaniciYetki");
                   }
                   
                   if(!(yetki.contains("Proje Ekleme"))){
                       btnProjeGirisKaydet.setEnabled(false);
                       btnAcProjeDetayImportGUI.setEnabled(false);
                       menuItemImportCsv.setEnabled(false);
                   }
                   
                      if(!(yetki.contains("Proje Silme ve Güncelleme"))){
                          btnProjeGirisDuzenle.setEnabled(false);
                          btnProjeGirisSil.setEnabled(false);
                          btnMalzemeGirisDuzenle.setEnabled(false);
                          btnMalzemeGirisSil.setEnabled(false);
                          btnMalzemeGirisKaydet.setEnabled(false);
                       
                          
                   }
     

        } catch (Exception e) {
        }
    }

    
            
private void toplamBirimFiyatiGor(String onYazi,String paraBirimi) {
       try {
            
        String toplamBulmaSorgusu = "SELECT SUM(BirimFiyat) as Toplam FROM tblprojeicerik WHERE  p_ID = ? AND ParaBirimi = ? ";
      
        preparedStatement = baglanti.prepareStatement(toplamBulmaSorgusu);

        preparedStatement.setString(1,(tableProjeninMalzemeleri.getModel().getValueAt(0, 1).toString()));
           
        preparedStatement.setString(2, paraBirimi);
      
        resultSet = preparedStatement.executeQuery();
          
            if (resultSet.next()) {
                if(resultSet.getString("Toplam")!=null){
                                 txtToplamBirimFiyat.setText(txtToplamBirimFiyat.getText()+onYazi+resultSet.getString("Toplam")+"\n");

                }

            }
        } catch (Exception e) {
          
        }   
    }

private void toplamMaliyetiGor(String onYazi,String paraBirimi) {
//       try {
//            callableStatement= baglanti.prepareCall("{CALL isbak_malzeme_proje.toplamMaliyetiBul(?)}");   
//            callableStatement.setString(1, paraBirimi);
//            resultSet = callableStatement.executeQuery();
//
//            if (resultSet.next()) {
//                    
//              txtToplamMaliyetiGor.setText(txtToplamMaliyetiGor.getText()+onYazi+resultSet.getString("Toplam")+"\n");
//            System.out.println(onYazi+resultSet.getString("Toplam").trim());
//          
//            }
//        
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }   
    
       try {
            
        String toplamBulmaSorgusu = "SELECT SUM(Top_Maliyet) as Toplam FROM tblprojeicerik WHERE  p_ID = ? AND ParaBirimi = ? ";
      
        preparedStatement = baglanti.prepareStatement(toplamBulmaSorgusu);

        preparedStatement.setString(1,(tableProjeninMalzemeleri.getModel().getValueAt(0, 1).toString()));
           
        preparedStatement.setString(2, paraBirimi);
      
        resultSet = preparedStatement.executeQuery();
          
            if (resultSet.next()) {
                if(resultSet.getString("Toplam")!=null){
                                 txtToplamMaliyetiGor.setText(txtToplamMaliyetiGor.getText()+onYazi+resultSet.getString("Toplam")+"\n");

                }

            }
        } catch (Exception e) {
          
        }  


    }


private void toplamBirimTeklifiGor(String onYazi,String paraBirimi) {
              try {
            
        String toplamBulmaSorgusu = "SELECT SUM(Br_Teklif) as Toplam FROM tblprojeicerik WHERE  p_ID = ? AND ParaBirimi = ? ";
      
        preparedStatement = baglanti.prepareStatement(toplamBulmaSorgusu);

        preparedStatement.setString(1,(tableProjeninMalzemeleri.getModel().getValueAt(0, 1).toString()));
           
        preparedStatement.setString(2, paraBirimi);
      
        resultSet = preparedStatement.executeQuery();
          
            if (resultSet.next()) {
                if(resultSet.getString("Toplam")!=null){
                                 txtToplamBirimTeklifiGor.setText(txtToplamBirimTeklifiGor.getText()+onYazi+resultSet.getString("Toplam")+"\n");

                }

            }
        } catch (Exception e) {
          
        } 

    }


private void genelToplamTeklifiGor(String onYazi,String paraBirimi) {
                     try {
            
        String toplamBulmaSorgusu = "SELECT SUM(Top_Teklif) as Toplam FROM tblprojeicerik WHERE  p_ID = ? AND ParaBirimi = ? ";
      
        preparedStatement = baglanti.prepareStatement(toplamBulmaSorgusu);

        preparedStatement.setString(1,(tableProjeninMalzemeleri.getModel().getValueAt(0, 1).toString()));
           
        preparedStatement.setString(2, paraBirimi);
      
        resultSet = preparedStatement.executeQuery();
          
            if (resultSet.next()) {
                if(resultSet.getString("Toplam")!=null){
                                 txtGenelToplamTeklifiGor.setText(txtGenelToplamTeklifiGor.getText()+onYazi+resultSet.getString("Toplam")+"\n");

                }

            }
        } catch (Exception e) {
          
        }  
 
    }

    private void aramaYapProje() {
       try {
            formuTemizle();
                                  
            String aramaSorgusu = "SELECT  * FROM tblprojeler "
                    + "WHERE  projeAdi LIKE ? AND   musteriAdi LIKE ? AND   projeTeklifKodu LIKE ? ";
            preparedStatement = baglanti.prepareStatement(aramaSorgusu);
            preparedStatement.setString(1, txtAramaprojeAdi.getText() + "%");
            preparedStatement.setString(2, txtAramamusteriAdi.getText() + "%");
            preparedStatement.setString(3, txtAramaprojeTeklifKodu.getText() + "%");
            
            
            resultSet = preparedStatement.executeQuery();
            
            tableProjeGiris.setModel(DbUtils.resultSetToTableModel(resultSet));

                        tableProjeGiris.getModel().addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    aramaYapProje();
                }
            });
            
    
            if (tableProjeGiris.getRowCount() > 0) {
                lblAramaMesajProje.setText("Kayıtlar gösteriliyor.");
                //tableProjeGiris.setEnabled(false);
            } else {
                lblAramaMesajProje.setText("Aranılan kayıt bulunamadı.");
               // tableProjeGiris.setEnabled(false);
            }
                    
            if(txtAramaprojeAdi.getText().equals("") && txtAramamusteriAdi.getText().equals("") && txtAramaprojeTeklifKodu.getText().equals(""))
            {
                lblAramaMesajProje.setText("Mesaj : ");
                
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "HATA :" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
            
        }
    }

    private void projeGirisYazdir() {
        try {  
            
            
            String PROJEADI = txtAramaprojeAdi.getText() + "%";
            String MUSTERIADI = txtAramamusteriAdi.getText() + "%";
            String TEKLIFKODU = txtAramaprojeTeklifKodu.getText() + "%";


            
            String raporSorgusu = "SELECT  projeTeklifKodu,projeAdi,ProjeHazirlamaTarihi,MusteriAdi  FROM tblprojeler "
            + " WHERE projeAdi LIKE '"+PROJEADI+"' AND  MusteriAdi LIKE '"+MUSTERIADI+"' AND  projeTeklifKodu LIKE '"+TEKLIFKODU+"'";

            JasperDesign jasperDesign = JRXmlLoader.load("projereport.jrxml");

                    
            JRDesignQuery designQuery = new JRDesignQuery();
            designQuery.setText(raporSorgusu);
            jasperDesign.setQuery(designQuery);
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, baglanti);
            JasperViewer.viewReport(jasperPrint, false);
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "HATA :", "MESAJ", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void tablodakiProjelerinMalzemeleriniSilmedenSonraGetir() {
        try {

            
            String sql_sorgu="SELECT * FROM tblprojeicerik WHERE p_ID=?";
  
             preparedStatement = baglanti.prepareStatement(sql_sorgu);
            preparedStatement.setString(1, aramaIcinProjeID.getText());
             resultSet = preparedStatement.executeQuery();
             
             tableProjeninMalzemeleri.setModel(DbUtils.resultSetToTableModel(resultSet));   
                                     tableProjeninMalzemeleri.getModel().addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    tablodakiProjelerinMalzemeleriniGetir  ();
                }
            });
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "HATA:" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
        }
    }

}


