/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aksoyali;

import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.TableModel;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.LineNumberReader;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Ali
 */
public class MalzemeImportGUI extends javax.swing.JFrame {

    /**
     * Creates new form MalzemeImportGUI
     */
    public MalzemeImportGUI() {
        initComponents();
         this.setLocationRelativeTo(getRootPane());//Frame ekranın ortasında açılır
    }
    Connection baglanti = null;
    ResultSet resultSet = null;
    
    PreparedStatement preparedStatement = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMalzemeleriIceAktar = new javax.swing.JButton();
        btnMalzemeleriVeriTabaninaKaydet = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableImportMalzeme = new javax.swing.JTable();
        btnTableImportMalzemeTemizle = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuDosya = new javax.swing.JMenu();
        menuItemMalzemeImport = new javax.swing.JMenuItem();
        menuItemKaydet = new javax.swing.JMenuItem();
        menuItemCikis = new javax.swing.JMenuItem();
        menuYardim = new javax.swing.JMenu();
        menuItemHakkinda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MALZEME IMPORT");
        setPreferredSize(new java.awt.Dimension(690, 472));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnMalzemeleriIceAktar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/import.png"))); // NOI18N
        btnMalzemeleriIceAktar.setText("Malzemeleri İçe Aktar");
        btnMalzemeleriIceAktar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeleriIceAktarActionPerformed(evt);
            }
        });

        btnMalzemeleriVeriTabaninaKaydet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database.png"))); // NOI18N
        btnMalzemeleriVeriTabaninaKaydet.setText("VeriTabanına Kaydet");
        btnMalzemeleriVeriTabaninaKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeleriVeriTabaninaKaydetActionPerformed(evt);
            }
        });

        tableImportMalzeme.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102)));
        tableImportMalzeme.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tableImportMalzeme.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "malzemeID", "malzemeGrubu", "malzemeAltGrubu", "malzemeMarkasi", "malzemeModeli", "malzemeAdi", "malzemeFiyati", "malzemeParaBirimi", "malzemeBirimi", "malzemeDataSheet", "malzemeSartname"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableImportMalzeme.setSelectionBackground(new java.awt.Color(0, 102, 0));
        jScrollPane4.setViewportView(tableImportMalzeme);

        btnTableImportMalzemeTemizle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/temizle.png"))); // NOI18N
        btnTableImportMalzemeTemizle.setText("Tabloyu Temizle");
        btnTableImportMalzemeTemizle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTableImportMalzemeTemizleActionPerformed(evt);
            }
        });

        menuDosya.setText("Dosya");

        menuItemMalzemeImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/impor16.png"))); // NOI18N
        menuItemMalzemeImport.setText("Malzeme Import");
        menuItemMalzemeImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeleriIceAktarActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemMalzemeImport);

        menuItemKaydet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/kaydet16.png"))); // NOI18N
        menuItemKaydet.setText("Kaydet");
        menuItemKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMalzemeleriVeriTabaninaKaydetActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemKaydet);

        menuItemCikis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cıkıs16.png"))); // NOI18N
        menuItemCikis.setText("Çıkış");
        menuItemCikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCikisActionPerformed(evt);
            }
        });
        menuDosya.add(menuItemCikis);

        jMenuBar1.add(menuDosya);

        menuYardim.setText("Yardım");

        menuItemHakkinda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/hakkımızda16.png"))); // NOI18N
        menuItemHakkinda.setText("Hakkında");
        menuItemHakkinda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemHakkindaActionPerformed(evt);
            }
        });
        menuYardim.add(menuItemHakkinda);

        jMenuBar1.add(menuYardim);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMalzemeleriIceAktar, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTableImportMalzemeTemizle, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMalzemeleriVeriTabaninaKaydet, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMalzemeleriIceAktar)
                    .addComponent(btnMalzemeleriVeriTabaninaKaydet)
                    .addComponent(btnTableImportMalzemeTemizle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void importTable(JTable table, File file) throws IOException {
    LinkedList liste = new LinkedList();
        TableModel model = table.getModel();
        
        FileReader fr = new FileReader(file);
        LineNumberReader lnreader = new LineNumberReader(fr);
        String line = "";
        while ((line = lnreader.readLine()) != null) {  
            //okunan stringleri  ";" a göre ayırarak liste ye atıyoruz
            for (String retval : line.split(";")) {
                liste.add(retval);    
                //System.out.println(retval);
            }
        }
         
        
      //  System.out.println("Liste size: "+liste.size());
        int satirSayisi=(liste.size()+1)/11;
        //System.out.println("Satır sayısı: "+satirSayisi);
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(satirSayisi);
        
      int listeninBoyutu=0;
        
           try {//listedeki elemanları table e aktarıyoruz.
             listeninBoyutu = liste.size();
            int dongununDonecegiDeger = 0;
          //  System.out.println("listenin boyuyu: " + listeninBoyutu);
            
            while (dongununDonecegiDeger < listeninBoyutu) {
                for (int i = 0; i < model.getRowCount(); i++) {
                    for (int j = 0; j < model.getColumnCount(); j++) {
                       
                        model.setValueAt(liste.get(dongununDonecegiDeger), i, j);
                                    dongununDonecegiDeger++;
                    }
                }
            }

        } catch (Exception e) {
        }
 
       
        fr.close();
    }
    private void btnMalzemeleriIceAktarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMalzemeleriIceAktarActionPerformed

        JFileChooser fileopen = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("CSV files", "csv");
        fileopen.addChoosableFileFilter(filter);
        int answer = fileopen.showDialog(null, "Open file");
        if (answer == JFileChooser.APPROVE_OPTION) {//Seçim yapılırsa
            File f = fileopen.getSelectedFile();
            try {

                importTable(tableImportMalzeme, f);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "HATA :", "MESAJ", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnMalzemeleriIceAktarActionPerformed

    private void btnMalzemeleriVeriTabaninaKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMalzemeleriVeriTabaninaKaydetActionPerformed
        if (tableImportMalzeme.getRowCount() != 0) {
            TableModel m = tableImportMalzeme.getModel();


            String SQL = "INSERT INTO  tblmalzemeler (";
            for (int i = 1; i < m.getColumnCount() - 1; i++) {
                SQL += "`" + m.getColumnName(i) + "`,";

            }

            SQL += "`" + m.getColumnName(m.getColumnCount() - 1) + "`) VALUES ";

//             for (int row = 0; row < listeninBoyutu/8; row++) {//
            for (int row = 0; row < m.getRowCount(); row++) {///
                SQL += "(";

                for (int col = 1; col < m.getColumnCount() - 1; col++) {
                    SQL += "'" + m.getValueAt(row, col) + "',";

                }
                SQL += "'" + m.getValueAt(row, m.getColumnCount() - 1) + "')";

//            if (row < (listeninBoyutu/8)- 1) {///

                if (row < m.getRowCount() - 1) {
                    SQL += ",";

                }
            }
            try {
                preparedStatement = baglanti.prepareStatement(SQL);
                preparedStatement.execute();

                JOptionPane.showMessageDialog(null, "Veritabanına Kaydedildi.", "MESAJ",
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "HATA :", "MESAJ", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "HATA :", "MESAJ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnMalzemeleriVeriTabaninaKaydetActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        baglanti=Mysqlbaglantisi.baglan();

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      if (baglanti != null) {

            try {
                baglanti.close();
            } catch (Exception e) {
            }

        }


        if (resultSet != null) {
            try {
                resultSet.close();
            } catch (Exception e) {
            }
        }


        if (preparedStatement != null) {
            try {
                preparedStatement.close();
            } catch (Exception e) {
            }
        }

    }//GEN-LAST:event_formWindowClosing

    private void btnTableImportMalzemeTemizleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableImportMalzemeTemizleActionPerformed
     
       DefaultTableModel dtm = (DefaultTableModel) tableImportMalzeme.getModel();
        dtm.setRowCount(0);
    }//GEN-LAST:event_btnTableImportMalzemeTemizleActionPerformed

    private void menuItemHakkindaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemHakkindaActionPerformed
        Hakkimizda hakkimizda=new Hakkimizda();
        hakkimizda.setVisible(true);
    }//GEN-LAST:event_menuItemHakkindaActionPerformed

    private void menuItemCikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCikisActionPerformed
      System.exit(0);
    }//GEN-LAST:event_menuItemCikisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MalzemeImportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MalzemeImportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MalzemeImportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MalzemeImportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MalzemeImportGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMalzemeleriIceAktar;
    private javax.swing.JButton btnMalzemeleriVeriTabaninaKaydet;
    private javax.swing.JButton btnTableImportMalzemeTemizle;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenu menuDosya;
    private javax.swing.JMenuItem menuItemCikis;
    private javax.swing.JMenuItem menuItemHakkinda;
    private javax.swing.JMenuItem menuItemKaydet;
    private javax.swing.JMenuItem menuItemMalzemeImport;
    private javax.swing.JMenu menuYardim;
    private javax.swing.JTable tableImportMalzeme;
    // End of variables declaration//GEN-END:variables
}
