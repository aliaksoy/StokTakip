/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aksoyali;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Ali
 */
public class YoneticiEkranGUI extends javax.swing.JFrame {

    /**
     * Creates new form YoneticiEkranGUI
     */
    public YoneticiEkranGUI() {
        initComponents();
            this.setLocationRelativeTo(getRootPane());//Frame ekranın ortasında açılır
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlKullaniciPaneli = new javax.swing.JPanel();
        lblkullaniciAdi = new javax.swing.JLabel();
        txtkullaniciAdi = new javax.swing.JTextField();
        lblkullaniciParola = new javax.swing.JLabel();
        txtkullaniciParola = new javax.swing.JTextField();
        lblkullaniciYetki = new javax.swing.JLabel();
        chkkullaniciYetkiProjeEkle = new javax.swing.JCheckBox();
        chkkullaniciYetkiProjeSilGuncelle = new javax.swing.JCheckBox();
        chkkullaniciYetkiMalzemeEkle = new javax.swing.JCheckBox();
        chkkullaniciYetkiMalzemeSilGuncelle = new javax.swing.JCheckBox();
        btnKullaniciKaydet = new javax.swing.JButton();
        btnProjeDetaySil = new javax.swing.JButton();
        btnProjeDetayDuzenle = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKullanicilar = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("YÖNETİCİ EKRAN");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlKullaniciPaneli.setBackground(new java.awt.Color(204, 255, 204));
        pnlKullaniciPaneli.setBorder(javax.swing.BorderFactory.createTitledBorder("Kullanıcı Paneli"));

        lblkullaniciAdi.setText("Kullanıcı Adı ");

        lblkullaniciParola.setText("Kullanıcı Parola");

        lblkullaniciYetki.setText("Kullanıcı Yetki");

        chkkullaniciYetkiProjeEkle.setSelected(true);
        chkkullaniciYetkiProjeEkle.setText("Proje Ekleme");

        chkkullaniciYetkiProjeSilGuncelle.setText("Proje Silme ve Güncelleme");

        chkkullaniciYetkiMalzemeEkle.setText("Malzeme Ekleme");

        chkkullaniciYetkiMalzemeSilGuncelle.setText("Malzeme Silme ve Güncelleme");

        btnKullaniciKaydet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        btnKullaniciKaydet.setText("KAYDET");
        btnKullaniciKaydet.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnKullaniciKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKullaniciKaydetActionPerformed(evt);
            }
        });

        btnProjeDetaySil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        btnProjeDetaySil.setText("SİL");
        btnProjeDetaySil.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeDetaySil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeDetaySilActionPerformed(evt);
            }
        });

        btnProjeDetayDuzenle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        btnProjeDetayDuzenle.setText("DÜZENLE");
        btnProjeDetayDuzenle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProjeDetayDuzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjeDetayDuzenleActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*");
        jLabel4.setToolTipText("ZORUNLU ALAN");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("*");
        jLabel5.setToolTipText("ZORUNLU ALAN");

        javax.swing.GroupLayout pnlKullaniciPaneliLayout = new javax.swing.GroupLayout(pnlKullaniciPaneli);
        pnlKullaniciPaneli.setLayout(pnlKullaniciPaneliLayout);
        pnlKullaniciPaneliLayout.setHorizontalGroup(
            pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                        .addComponent(lblkullaniciAdi)
                        .addGap(18, 18, 18)
                        .addComponent(txtkullaniciAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                        .addComponent(lblkullaniciParola)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtkullaniciParola, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                        .addComponent(lblkullaniciYetki)
                        .addGap(18, 18, 18)
                        .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                                .addComponent(chkkullaniciYetkiMalzemeEkle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkkullaniciYetkiMalzemeSilGuncelle))
                            .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                                .addComponent(chkkullaniciYetkiProjeEkle)
                                .addGap(18, 18, 18)
                                .addComponent(chkkullaniciYetkiProjeSilGuncelle)))))
                .addGap(18, 18, 18)
                .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnKullaniciKaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProjeDetaySil, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProjeDetayDuzenle))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        pnlKullaniciPaneliLayout.setVerticalGroup(
            pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                        .addComponent(btnKullaniciKaydet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnProjeDetaySil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProjeDetayDuzenle))
                    .addGroup(pnlKullaniciPaneliLayout.createSequentialGroup()
                        .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblkullaniciAdi)
                            .addComponent(txtkullaniciAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblkullaniciParola)
                            .addComponent(txtkullaniciParola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblkullaniciYetki)
                            .addComponent(chkkullaniciYetkiProjeEkle)
                            .addComponent(chkkullaniciYetkiProjeSilGuncelle))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlKullaniciPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkkullaniciYetkiMalzemeEkle)
                            .addComponent(chkkullaniciYetkiMalzemeSilGuncelle))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tableKullanicilar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        tableKullanicilar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tableKullanicilar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableKullanicilar.setSelectionBackground(new java.awt.Color(51, 255, 255));
        tableKullanicilar.setSelectionForeground(new java.awt.Color(255, 0, 51));
        tableKullanicilar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableKullanicilar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKullanicilarMouseClicked(evt);
            }
        });
        tableKullanicilar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableKullanicilarKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableKullanicilar);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/degistir.png"))); // NOI18N
        jButton1.setText("Yönetici Bilgilerini Değiştir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlKullaniciPaneli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(pnlKullaniciPaneli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(82, 82, 82)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Connection baglanti = null;
    ResultSet resultSet = null;
     PreparedStatement preparedStatement = null;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      baglanti=Mysqlbaglantisi.baglan();

        kullaniciDetaylariniTabloyaGetir();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      if (baglanti != null) {

            try {
                baglanti.close();
            } catch (Exception e) {
            }

        }

        if (resultSet != null) {
            try {
                resultSet.close();
            } catch (Exception e) {
            }
        }


        if (preparedStatement != null) {
            try {
                preparedStatement.close();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnKullaniciKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKullaniciKaydetActionPerformed
        kullaniciKaydet();

    }//GEN-LAST:event_btnKullaniciKaydetActionPerformed

    private void tableKullanicilarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKullanicilarMouseClicked
    tablodakiKullanicilariTxtFieldlaraGetir();    

    }//GEN-LAST:event_tableKullanicilarMouseClicked

    private void btnProjeDetaySilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeDetaySilActionPerformed
        kullaniciSil();
    }//GEN-LAST:event_btnProjeDetaySilActionPerformed

    private void btnProjeDetayDuzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjeDetayDuzenleActionPerformed
        kullaniciGuncelle();
    }//GEN-LAST:event_btnProjeDetayDuzenleActionPerformed

    private void tableKullanicilarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKullanicilarKeyReleased
        tablodakiKullanicilariTxtFieldlaraGetir(); 
    }//GEN-LAST:event_tableKullanicilarKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       YoneticiBilgiDegistirGUI bilgiDegistirGUI=new YoneticiBilgiDegistirGUI();
       bilgiDegistirGUI.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YoneticiEkranGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YoneticiEkranGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YoneticiEkranGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YoneticiEkranGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YoneticiEkranGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKullaniciKaydet;
    private javax.swing.JButton btnProjeDetayDuzenle;
    private javax.swing.JButton btnProjeDetaySil;
    private javax.swing.JCheckBox chkkullaniciYetkiMalzemeEkle;
    private javax.swing.JCheckBox chkkullaniciYetkiMalzemeSilGuncelle;
    private javax.swing.JCheckBox chkkullaniciYetkiProjeEkle;
    private javax.swing.JCheckBox chkkullaniciYetkiProjeSilGuncelle;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblkullaniciAdi;
    private javax.swing.JLabel lblkullaniciParola;
    private javax.swing.JLabel lblkullaniciYetki;
    private javax.swing.JPanel pnlKullaniciPaneli;
    private javax.swing.JTable tableKullanicilar;
    private javax.swing.JTextField txtkullaniciAdi;
    private javax.swing.JTextField txtkullaniciParola;
    // End of variables declaration//GEN-END:variables


    private void kullaniciDetaylariniTabloyaGetir() {
       
                try {
            String tabloyuGuncelleSorgusu = "SELECT * FROM tblkullanicilar ORDER BY kullaniciID";
            preparedStatement = baglanti.prepareStatement(tabloyuGuncelleSorgusu);
            resultSet = preparedStatement.executeQuery();
            tableKullanicilar.setModel(DbUtils.resultSetToTableModel(resultSet));
                     
            tableKullanicilar.getModel().addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    kullaniciDetaylariniTabloyaGetir();
                }
            });
        } catch (Exception e) {
              
        }
                
                
                
    }

    private void kullaniciKaydet() {
              
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        if (!(txtkullaniciAdi.getText().trim().equals("")) && !(txtkullaniciParola.getText().trim().equals(""))) {

            
            
            String ayniKullaniciVarmi = "SELECT * FROM tblkullanicilar WHERE kullaniciAdi = ? ";
         try {
            preparedStatement = baglanti.prepareStatement(ayniKullaniciVarmi);
            preparedStatement.setString(1, txtkullaniciAdi.getText());

            resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                JOptionPane.showMessageDialog(null,txtkullaniciAdi.getText()+ " kullanıcı kayıtta var...", "MESAJ",
                        JOptionPane.ERROR_MESSAGE);


            } else {
              try {
                String eklemeSorgusu = "INSERT INTO tblkullanicilar (kullaniciAdi, kullaniciParola,kullaniciYetki) "
                        + " VALUES(?, ?, ?)";

                preparedStatement = baglanti.prepareStatement(eklemeSorgusu);

                preparedStatement.setString(1, txtkullaniciAdi.getText());
                preparedStatement.setString(2, txtkullaniciParola.getText());
              
                String malzemeYetkisi="-";
                
                if(chkkullaniciYetkiMalzemeEkle.isSelected()){
                    malzemeYetkisi+=chkkullaniciYetkiMalzemeEkle.getText()+"-";
                }

                if (chkkullaniciYetkiMalzemeSilGuncelle.isSelected()) {
                    malzemeYetkisi+=chkkullaniciYetkiMalzemeSilGuncelle.getText()+"-";
                }

                if (chkkullaniciYetkiProjeEkle.isSelected()) {
                    malzemeYetkisi+=chkkullaniciYetkiProjeEkle.getText()+"-";
                }

                if (chkkullaniciYetkiProjeSilGuncelle.isSelected()) {
                    malzemeYetkisi+=chkkullaniciYetkiProjeSilGuncelle.getText()+"-";
                }
              
                preparedStatement.setString(3, malzemeYetkisi.toString());


                preparedStatement.execute();
                kullaniciDetaylariniTabloyaGetir();
       
                formuTemizle();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "HATA:" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
            }

            }


        } catch (Exception e) {
        }
            
            
            
            
            
            
            
            
            
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Zorunlu Alanları Doldurunuz.", "MESAJ", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void formuTemizle() {
        txtkullaniciAdi.setText(null);
        txtkullaniciParola.setText(null);
        chkkullaniciYetkiMalzemeEkle.setSelected(false);
        chkkullaniciYetkiMalzemeSilGuncelle.setSelected(false);
        chkkullaniciYetkiProjeSilGuncelle.setSelected(false);
    }

    private void tablodakiKullanicilariTxtFieldlaraGetir() {
         formuTemizle();
       int satirNumarasi = tableKullanicilar.getSelectedRow();
        //KOLON SÜTUN
            txtkullaniciAdi.setText(tableKullanicilar.getModel().getValueAt(satirNumarasi, 1).toString());
            txtkullaniciParola.setText(tableKullanicilar.getModel().getValueAt(satirNumarasi, 2).toString());
            
            if(tableKullanicilar.getModel().getValueAt(satirNumarasi, 3).toString().contains(chkkullaniciYetkiMalzemeEkle.getText())){
                chkkullaniciYetkiMalzemeEkle.setSelected(true);
            }
            
            if(tableKullanicilar.getModel().getValueAt(satirNumarasi, 3).toString().contains(chkkullaniciYetkiMalzemeSilGuncelle.getText())){
                chkkullaniciYetkiMalzemeSilGuncelle.setSelected(true);
            }
            
            if(tableKullanicilar.getModel().getValueAt(satirNumarasi, 3).toString().contains(chkkullaniciYetkiProjeEkle.getText())){
                chkkullaniciYetkiProjeEkle.setSelected(true);
            }else{
                 chkkullaniciYetkiProjeEkle.setSelected(false);
            }
            
            if(tableKullanicilar.getModel().getValueAt(satirNumarasi, 3).toString().contains(chkkullaniciYetkiProjeSilGuncelle.getText())){
                chkkullaniciYetkiProjeSilGuncelle.setSelected(true);
            }
            

            

    }

    private void kullaniciSil() {
        if(tableKullanicilar.getSelectedRowCount()!=0){//Tabloda herhangi bir satır seçilmişse silme işleme gerçekleşsin
              Object[] dugmeIsimleri = {"Evet",
            "Hayır"};
        int gelenDeger = JOptionPane.showOptionDialog(rootPane, "Emin misiniz?", "UYARI MESAJI",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                (new javax.swing.ImageIcon(getClass().getResource("/icons/uyari.png"))),
                dugmeIsimleri,
                dugmeIsimleri[1]);
        
        
        if (gelenDeger == 0) {

            try {
                
                
                String silmeSorgusu = "DELETE FROM tblkullanicilar WHERE kullaniciID = ?";   
              
                
                preparedStatement = baglanti.prepareStatement(silmeSorgusu);
                
                int satirNumarasi = tableKullanicilar.getSelectedRow();
                //tablodaki o andaki sırası    //ilk kolon sütun
                preparedStatement.setString(1, tableKullanicilar.getModel().getValueAt(satirNumarasi, 0).toString());                
                
                preparedStatement.execute();
                
                 JOptionPane.showMessageDialog(null, "Silme işlemi\nbaşarılı olarak gerçekleştirildi.", "MESAJ",
                    JOptionPane.INFORMATION_MESSAGE);
                
                kullaniciDetaylariniTabloyaGetir();
                formuTemizle();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "HATA :" + e, "MESAJ", JOptionPane.ERROR_MESSAGE);
                
            }
            
            
            
        } else if (gelenDeger == 1) {
            
        }   
           }
           else{
             JOptionPane.showMessageDialog(null, "HATA MEYDA GELDİ\nLütfen Bir Seçim Yapınız.", "MESAJ", JOptionPane.ERROR_MESSAGE);  
           }
    }

    private void kullaniciGuncelle() {
       if (!(txtkullaniciAdi.getText().trim().equals("")) && !(txtkullaniciParola.getText().trim().equals(""))) {

            try {


                String guncellemeSorgusu = "UPDATE tblkullanicilar SET "
                        + " kullaniciAdi = ?, "
                        + " kullaniciParola = ?, "
                        + " kullaniciYetki = ? "
                        + " WHERE kullaniciID = ? ";

                preparedStatement = baglanti.prepareStatement(guncellemeSorgusu);

                preparedStatement.setString(1, txtkullaniciAdi.getText());
                preparedStatement.setString(2, txtkullaniciParola.getText());

                
                   String malzemeYetkisi="-";
                
                if(chkkullaniciYetkiMalzemeEkle.isSelected()){
                    malzemeYetkisi+=chkkullaniciYetkiMalzemeEkle.getText()+"-";

                   // preparedStatement.setString(3, chkkullaniciYetkiMalzemeEkle.getText()+", ");
                }

                if (chkkullaniciYetkiMalzemeSilGuncelle.isSelected()) {
                    malzemeYetkisi+=chkkullaniciYetkiMalzemeSilGuncelle.getText()+"-";
                    //preparedStatement.setString(3, chkkullaniciYetkiMalzemeSilGuncelle.getText()+", ");
                }

                if (chkkullaniciYetkiProjeEkle.isSelected()) {
                    malzemeYetkisi+=chkkullaniciYetkiProjeEkle.getText()+"-";
                   // preparedStatement.setString(3, chkkullaniciYetkiProjeEkle.getText()+", ");
                }

                if (chkkullaniciYetkiProjeSilGuncelle.isSelected()) {
                    malzemeYetkisi+=chkkullaniciYetkiProjeSilGuncelle.getText()+"-";
                    //preparedStatement.setString(3, chkkullaniciYetkiProjeSilGuncelle.getText());
                }


                
               preparedStatement.setString(3, malzemeYetkisi.toString());




                int satirNumarasi = tableKullanicilar.getSelectedRow();
                //tablodaki o andaki sırası    //ilk kolon sütun
                preparedStatement.setString(4, tableKullanicilar.getModel().getValueAt(satirNumarasi, 0).toString());

                //GÜNCELLEMEYE ÖZEL
                preparedStatement.executeUpdate();

                JOptionPane.showMessageDialog(null, "Gücellenme işlemi\nbaşarılı olarak gerçekleştirildi.", "MESAJ",
                        JOptionPane.INFORMATION_MESSAGE);

                kullaniciDetaylariniTabloyaGetir();
                formuTemizle();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "HATA MEYDA GELDİ\nLütfen bir kişi seçiniz.", "MESAJ", JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Zorunlu Alanları Doldurunuz.", "MESAJ", JOptionPane.ERROR_MESSAGE);

        }
    }
}
